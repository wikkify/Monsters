{"version":3,"sources":["Components/Card/CardComponent.jsx","Components/CardListing/CardList.js","Components/Search/searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","className","style","alignItems","alt","height","width","src","monster","id","name","email","CardList","monsters","map","Searchbox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,EAAgB,SAACC,GAAD,OACzB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,MAAO,CAACC,WAAW,UAAxB,SACA,qBAAKC,IAAI,UAAUC,OAAO,MAAMC,MAAM,MAAMC,IAAG,+BAA0BP,EAAMQ,QAAQC,GAAxC,8BAE/C,mCAAOT,EAAMQ,QAAQE,QACrB,4BAAIV,EAAMQ,QAAQG,YCLbC,EAAW,SAACZ,GACrB,OACI,qBAAKC,UAAU,gBAAf,SAEQD,EAAMa,SAASC,KAAI,SAAAN,GAAO,OACtB,cAAC,EAAD,CAAgCA,QAASA,GAArBA,EAAQC,UCNnCM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIhB,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCHG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAcFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAChC,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAET,SAAUkB,Y,oBAMxC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEe,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCVI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dfacbd6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CardStyle.css';\r\n\r\nexport const CardComponent = (props) => (\r\n    <div className='card-container'>\r\n        <div style={{alignItems:'center'}}>\r\n        <img alt='monster' height='100' width='100' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        </div>\r\n        <h2 > {props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n\r\n)","import React from 'react';\r\nimport './CardListstyle.css'\r\nimport {CardComponent} from '../Card/CardComponent';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='CardListstyle'>\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <CardComponent key={monster.id} monster={monster}/>\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport './searchboxstyle.css';\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n","import React from 'react';\n\nimport './App.css';\nimport { CardList } from './Components/CardListing/CardList';\nimport { Searchbox } from './Components/Search/searchbox';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json().then(\n        data => this.setState({ monsters: data })\n      ))\n  }\n  handleChange =(e)=> {\n    this.setState({ searchField: e.target.value })\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox\n          placeholder='search Monster'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n\n\n\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}